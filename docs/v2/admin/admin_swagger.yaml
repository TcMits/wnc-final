definitions:
  admin.EntitiesResponseTemplate-admin_employeeResponse:
    properties:
      count:
        type: integer
      next:
        type: string
      previous:
        type: string
      results:
        items:
          $ref: '#/definitions/admin.employeeResponse'
        type: array
    type: object
  admin.EntitiesResponseTemplate-admin_transactionResp:
    properties:
      count:
        type: integer
      next:
        type: string
      previous:
        type: string
      results:
        items:
          $ref: '#/definitions/admin.transactionResp'
        type: array
    type: object
  admin.employeeCreateReq:
    properties:
      first_name:
        type: string
      last_name:
        type: string
      username:
        type: string
    required:
    - first_name
    - last_name
    - username
    type: object
  admin.employeeResponse:
    properties:
      first_name:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      last_name:
        type: string
      username:
        type: string
    type: object
  admin.employeeUpdateReq:
    properties:
      first_name:
        type: string
      last_name:
        type: string
      username:
        type: string
    type: object
  admin.errorResponse:
    properties:
      code:
        type: string
      detail:
        type: string
      message:
        type: string
    type: object
  admin.loginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  admin.meResponse:
    properties:
      first_name:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      last_name:
        type: string
      username:
        type: string
    type: object
  admin.renewTokenRequest:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  admin.tokenPairResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  admin.transactionResp:
    properties:
      amount:
        type: number
      create_time:
        type: string
      description:
        type: string
      id:
        type: string
      receiver_bank_account_number:
        type: string
      receiver_bank_name:
        type: string
      receiver_id:
        type: string
      receiver_name:
        type: string
      sender_bank_account_number:
        type: string
      sender_bank_name:
        type: string
      sender_id:
        type: string
      sender_name:
        type: string
      source_transaction_id:
        type: string
      status:
        $ref: '#/definitions/transaction.Status'
      transaction_type:
        $ref: '#/definitions/transaction.TransactionType'
      update_time:
        type: string
    type: object
  transaction.Status:
    enum:
    - draft
    - draft
    - verified
    - success
    type: string
    x-enum-varnames:
    - DefaultStatus
    - StatusDraft
    - StatusVerified
    - StatusSuccess
  transaction.TransactionType:
    enum:
    - internal
    - external
    type: string
    x-enum-varnames:
    - TransactionTypeInternal
    - TransactionTypeExternal
info:
  contact: {}
paths:
  /employees:
    get:
      consumes:
      - application/json
      description: Show employee
      operationId: employee-listing
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin.EntitiesResponseTemplate-admin_employeeResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/admin.errorResponse'
      security:
      - Bearer: []
      summary: Show employee
      tags:
      - Employee
    post:
      consumes:
      - application/json
      description: Create a employee
      operationId: employee-create
      parameters:
      - description: Create a employee
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/admin.employeeCreateReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/admin.employeeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/admin.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/admin.errorResponse'
      security:
      - Bearer: []
      summary: Create a employee
      tags:
      - Employee
  /employees/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a employee
      operationId: employee-delete
      parameters:
      - description: ID of employee
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/admin.errorResponse'
      security:
      - Bearer: []
      summary: Delete a employee
      tags:
      - Employee
    get:
      consumes:
      - application/json
      description: Get a employee
      operationId: employee-get
      parameters:
      - description: ID of employee
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin.employeeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/admin.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/admin.errorResponse'
      security:
      - Bearer: []
      summary: Get a employee
      tags:
      - Employee
    put:
      consumes:
      - application/json
      description: Update a employee
      operationId: employee-update
      parameters:
      - description: Update a employee
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/admin.employeeUpdateReq'
      - description: ID of employee
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin.employeeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/admin.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/admin.errorResponse'
      security:
      - Bearer: []
      summary: Update a employee
      tags:
      - Employee
  /login:
    delete:
      consumes:
      - application/json
      description: Logout
      operationId: logout
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/admin.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/admin.errorResponse'
      security:
      - Bearer: []
      summary: Logout
      tags:
      - Authentication
    post:
      consumes:
      - application/json
      description: Login
      operationId: login
      parameters:
      - description: Login
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/admin.loginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin.tokenPairResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/admin.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/admin.errorResponse'
      summary: Login
      tags:
      - Authentication
  /me/:
    get:
      consumes:
      - application/json
      description: Get profile
      operationId: me
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin.meResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/admin.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/admin.errorResponse'
      security:
      - Bearer: []
      summary: Get profile
      tags:
      - Me
  /token:
    post:
      consumes:
      - application/json
      description: Renew token
      operationId: renewtoken
      parameters:
      - description: Renew token
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/admin.renewTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin.tokenPairResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/admin.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/admin.errorResponse'
      summary: Renew token
      tags:
      - Authentication
  /transactions:
    get:
      consumes:
      - application/json
      description: Show transactions
      operationId: transaction-listing
      parameters:
      - description: True if sort ascent by update_time otherwise ignored
        in: query
        name: update_time
        type: boolean
      - description: True if sort descent by update_time otherwise ignored
        in: query
        name: -update_time
        type: boolean
      - description: Date start
        in: query
        name: date_start
        type: integer
      - description: Date end
        in: query
        name: date_end
        type: integer
      - description: Bank name
        in: query
        name: bank_name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin.EntitiesResponseTemplate-admin_transactionResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/admin.errorResponse'
      security:
      - Bearer: []
      summary: Show transactions
      tags:
      - Transaction
  /transactions/{id}:
    get:
      consumes:
      - application/json
      description: Get a transaction
      operationId: transaction-get
      parameters:
      - description: ID of transaction
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin.transactionResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/admin.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/admin.errorResponse'
      security:
      - Bearer: []
      summary: Get a transaction
      tags:
      - Transaction
swagger: "2.0"
