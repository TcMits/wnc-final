// Package employee GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package employee

import "github.com/swaggo/swag"

const docTemplateemployee = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/bank-accounts": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Show bank accounts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bank account"
                ],
                "summary": "Show bank accounts",
                "operationId": "bankaccount-listing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account number of bank account",
                        "name": "account_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Username of bank account",
                        "name": "username",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/employee.EntitiesResponseTemplate-employee_bankAccountResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/employee.errorResponse"
                        }
                    }
                }
            }
        },
        "/bank-accounts/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a bank account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bank account"
                ],
                "summary": "Get a bank account",
                "operationId": "bankaccount-get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of bank account",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/employee.bankAccountResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/employee.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/employee.errorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Deposit a bank account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bank account"
                ],
                "summary": "Deposit a bank account",
                "operationId": "bankaccount-deposit",
                "parameters": [
                    {
                        "description": "Update a bank account",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/employee.bankAccountUpdateReq"
                        }
                    },
                    {
                        "type": "string",
                        "description": "ID of bank account",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/employee.bankAccountResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/employee.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/employee.errorResponse"
                        }
                    }
                }
            }
        },
        "/customers": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Show customers",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Show customers",
                "operationId": "customer-listing",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/employee.EntitiesResponseTemplate-employee_customerResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/employee.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Create a customer",
                "operationId": "customer-create",
                "parameters": [
                    {
                        "description": "Create a customer",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/employee.customerCreateReq"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/employee.customerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/employee.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/employee.errorResponse"
                        }
                    }
                }
            }
        },
        "/customers/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Customer"
                ],
                "summary": "Get a customer",
                "operationId": "customer-get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of customer",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/employee.customerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/employee.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/employee.errorResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Login",
                "operationId": "login",
                "parameters": [
                    {
                        "description": "Login",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/employee.loginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/employee.tokenPairResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/employee.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/employee.errorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Logout",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout",
                "operationId": "logout",
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/employee.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/employee.errorResponse"
                        }
                    }
                }
            }
        },
        "/me/": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get profile",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Me"
                ],
                "summary": "Get profile",
                "operationId": "me",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/employee.meResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/employee.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/employee.errorResponse"
                        }
                    }
                }
            }
        },
        "/token": {
            "post": {
                "description": "Renew token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Renew token",
                "operationId": "renewtoken",
                "parameters": [
                    {
                        "description": "Renew token",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/employee.renewTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/employee.tokenPairResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/employee.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/employee.errorResponse"
                        }
                    }
                }
            }
        },
        "/transactions": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Show transactions",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Show transactions",
                "operationId": "transaction-listing",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "True if sort ascent by update_time otherwise ignored",
                        "name": "update_time",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "True if sort descent by update_time otherwise ignored",
                        "name": "-update_time",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "True if only debt transaction otherwise ignored",
                        "name": "only_debt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID of bank account",
                        "name": "sender_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID of bank account",
                        "name": "receiver_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/employee.EntitiesResponseTemplate-employee_transactionResp"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/employee.errorResponse"
                        }
                    }
                }
            }
        },
        "/transactions/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Get a transaction",
                "operationId": "transaction-get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of transaction",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/employee.transactionResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/employee.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/employee.errorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "employee.EntitiesResponseTemplate-employee_bankAccountResp": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "next": {
                    "type": "string"
                },
                "previous": {
                    "type": "string"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/employee.bankAccountResp"
                    }
                }
            }
        },
        "employee.EntitiesResponseTemplate-employee_customerResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "next": {
                    "type": "string"
                },
                "previous": {
                    "type": "string"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/employee.customerResponse"
                    }
                }
            }
        },
        "employee.EntitiesResponseTemplate-employee_transactionResp": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "next": {
                    "type": "string"
                },
                "previous": {
                    "type": "string"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/employee.transactionResp"
                    }
                }
            }
        },
        "employee.bankAccountResp": {
            "type": "object",
            "properties": {
                "account_number": {
                    "type": "string"
                },
                "cash_in": {
                    "type": "number"
                },
                "cash_out": {
                    "type": "number"
                },
                "create_time": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_for_payment": {
                    "type": "boolean"
                },
                "update_time": {
                    "type": "string"
                }
            }
        },
        "employee.bankAccountUpdateReq": {
            "type": "object",
            "required": [
                "cash_in"
            ],
            "properties": {
                "cash_in": {
                    "type": "number"
                }
            }
        },
        "employee.customerCreateReq": {
            "type": "object",
            "required": [
                "email",
                "phone_number",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "employee.customerResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "last_name": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "employee.errorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "employee.loginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "employee.meResponse": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "last_name": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "employee.renewTokenRequest": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "employee.tokenPairResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "employee.transactionResp": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number"
                },
                "create_time": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "receiver_bank_account_number": {
                    "type": "string"
                },
                "receiver_bank_name": {
                    "type": "string"
                },
                "receiver_id": {
                    "type": "string"
                },
                "receiver_name": {
                    "type": "string"
                },
                "sender_bank_account_number": {
                    "type": "string"
                },
                "sender_bank_name": {
                    "type": "string"
                },
                "sender_id": {
                    "type": "string"
                },
                "sender_name": {
                    "type": "string"
                },
                "source_transaction_id": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/transaction.Status"
                },
                "transaction_type": {
                    "$ref": "#/definitions/transaction.TransactionType"
                },
                "update_time": {
                    "type": "string"
                }
            }
        },
        "transaction.Status": {
            "type": "string",
            "enum": [
                "draft",
                "draft",
                "verified",
                "success"
            ],
            "x-enum-varnames": [
                "DefaultStatus",
                "StatusDraft",
                "StatusVerified",
                "StatusSuccess"
            ]
        },
        "transaction.TransactionType": {
            "type": "string",
            "enum": [
                "internal",
                "external"
            ],
            "x-enum-varnames": [
                "TransactionTypeInternal",
                "TransactionTypeExternal"
            ]
        }
    }
}`

// SwaggerInfoemployee holds exported Swagger Info so clients can modify it
var SwaggerInfoemployee = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "employee",
	SwaggerTemplate:  docTemplateemployee,
}

func init() {
	swag.Register(SwaggerInfoemployee.InstanceName(), SwaggerInfoemployee)
}
