version: "3.7"

services:
    golang:
        build:
            context: .
            dockerfile: ./compose/production/golang/Dockerfile
        image: golang
        env_file:
            - ./.envs/.production/.golang.sample
            - ./.envs/.production/.postgres.sample
        depends_on:
            postgres:
                condition: service_healthy
        depends_on:
            - redis
        ports:
            - 80:8080
        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:8080/ping/"]
        restart: always

    postgres:
        build:
            context: .
            dockerfile: ./compose/production/postgres/Dockerfile
        image: postgres_db
        command: postgres
        volumes:
            - type: volume
              source: db
              target: /var/lib/postgresql/data
        env_file:
            - ./.envs/.production/.postgres.sample
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
            interval: 10s
            timeout: 5s
            retries: 5
    redis:
        image: redis:alpine
        ports:
            - 6379:6379
        container_name: redis_db_dev

    asynq-monitor:
        image: hibiken/asynqmon 
        container_name: asynq_monitor_dev
        env_file:
            - ./.envs/.production/.golang.sample
        ports:
            - 8081:8081
        depends_on:
            - redis
volumes:
    db:
